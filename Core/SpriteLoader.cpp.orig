#include "SpriteLoader.h"
#include "ResLoader.h"
//#include "GLHandles.h"

Sprite *SpriteLoader::loadSprite(const char *path, float x, float y, float width, float height) {
	float corners[] = {
		0, 0,
		width, 0,
		0, height,
		width, height
	};

	float uv[] = {
		0, 0,
		1, 0,
		0, 1,
		1, 1
	};

	GLuint vao;
	glGenVertexArrays(1, &vao);
	glBindVertexArray(vao);
	GLuint *buffers = (GLuint*)malloc(sizeof(GLuint) * 2);
	glGenBuffers(2, buffers);

	glBindBuffer(GL_ARRAY_BUFFER, buffers[0]);
	glBufferData(GL_ARRAY_BUFFER, sizeof(float) * 12, corners, GL_STATIC_DRAW);
	glEnableVertexAttribArray(0);
	glVertexAttribPointer(0, 2, GL_FLOAT, GL_FALSE, 0, (void*)0);

	glBindBuffer(GL_ARRAY_BUFFER, buffers[1]);
	glBufferData(GL_ARRAY_BUFFER, sizeof(float) * 12, uv, GL_STATIC_DRAW);
	glEnableVertexAttribArray(1);
	glVertexAttribPointer(1, 2, GL_FLOAT, GL_FALSE, 0, (void*)0);

	TextureHandle tex = ResLoader::loadTexture(path);
	//glTexParameteri(decodeHandle(tex), GL_TEXTURE_MIN_FILTER, GL_NEAREST);
	return new Sprite(new VertexArray(vao, buffers, 2), tex, Vector2(x, y));
}
